M5 Tests WriteUp

1: checkTowerHealth()

This method checks to see if all towers have the correct health assigned to them. It creates a new instance
of the game, then creates the 3 different types of tower objects. The test passes if all tower types
have the correct health

2: checkPointRange()

This method checks to see that the createRange() method creates a list with a valid set of points
for a specific point. It creates a tower positioned at (4,2) and checks all the surrounding areas
are in the list.

3: checkMoneyGain()
This method checks to make sure the user's money has increased by 50 on the gamescreen after an enemy
has been destroyed. It creates a new instance of the enemy, destroys it, then uses assertEqual
to make sure the money has increased appropriately.

4: enemyRemoved()
This method checks to make sure the enemy has been removed from the grid pane after it has been
destroyed. It creates a new enemy, calls the destroy method, gets a list of all the nodes in
the grid pane then makes sure the enemy is not in that list.

5: checkEnemyPos()
This method checks to make sure that the enemy's position is not null after combat. It calls
startCombat() then asserts that the enemy's position is not null.

6: checkEnemyHealth()
This method checks to make sure that the enemy incurs the right damage after one attack.
It creates a Jaguar Enemy then checks to make sure its health has decreased by the right
amount.

7: checkShowEnemies
This method checks to make sure that all enemies have been added to the the enemy list
after showEnemies() has been called. It creates the 3 different enemy objects then
asserts they are all in the list.

8: checkTowerAdded()
This method checks to make sure that a tower has been added to the tower list
after the setTower() method has been called. It creates a new monkey tower object
then asserts if it is in the list.

9: checkEnemyDamage()
This method checks to see if all enemies have the correct damage assigned to them. It creates a new instance
of the game, then creates the 3 different types of enemy objects. The test passes if all enemy types
have the correct damage.

10: checkEnemyAfterDestroy()
This method checks to make sure that an enemies health is 0 after the destory() method has been
called. It creates a new enemy object, calls the destory method, then asserts that the
enemy's health is 0.
